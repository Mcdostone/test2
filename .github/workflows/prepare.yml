name: Next release

permissions:
  contents: write
  actions: write
  packages: write
  pull-requests: write
  id-token: write
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Par exemple "2.92.0"'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Par exemple "2.92.0"'
        required: true
        type: string


jobs:
  prepare-next-release:
    runs-on: ubuntu-latest
    env:
      branch: "release/${{ inputs.version }}"
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          fetch-tags: 'true'
          fetch-depth: 0
      - name: Prepare next release branch
        continue-on-error: true
        run: |
          git checkout -b ${{ env.branch }}
          set +e
          sed -Ei "s/version=(.+)/version=${{ steps.next.outputs.version }}/" gradle.properties
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config --global push.autoSetupRemote true
          git add gradle.properties
          git commit -m "ci: Prepare next release branch ${{ steps.next.outputs.version }}"
          git push origin "${{ env.branch }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Milestone
        continue-on-error: true
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github.v3+json" \
          /repos/${{ github.repository }}/milestones \
          -f title='${{ inputs.version }}' \
          -f state='open' || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR
        continue-on-error: true
        run: gh pr create --head "$branch" --label 'release' --title "release ${{ inputs.version }}" --body "PR pour la release ${{ inputs.version }}."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}